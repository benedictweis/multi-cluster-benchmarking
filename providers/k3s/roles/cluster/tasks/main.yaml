- name: Download Helm install script
  get_url:
    url: https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
    dest: /tmp/get_helm.sh
    mode: "0755"

- name: Install Helm
  shell: /tmp/get_helm.sh
  args:
    creates: /usr/local/bin/helm

- name: Ensure Helm is installed
  command: helm version
  register: helm_version
  changed_when: false

- name: Uninstall K3s agent if present (ignore errors)
  become: true
  shell: bash /usr/local/bin/k3s-agent-uninstall.sh &6 sleep 10
  ignore_errors: true

- name: Uninstall K3s server if present (ignore errors)
  become: true
  shell: bash /usr/local/bin/k3s-uninstall.sh && sleep 20
  ignore_errors: true

- name: Install K3s with custom options
  shell: |
    curl -sfL https://get.k3s.io | INSTALL_K3S_EXEC='--disable cni --disable traefik --disable servicelb --disable metrics-server --disable-network-policy --flannel-backend=none --cluster-cidr={{ pod_cidr }} --service-cidr={{ service_cidr }} --kubelet-arg=cpu-manager-policy=static --kubelet-arg=cpu-manager-reconcile-period=5s --kubelet-arg=system-reserved=cpu=1000m,memory=2Gi --kubelet-arg=kube-reserved=cpu=2000m,memory=2Gi --kubelet-arg=reserved-cpus=0,1,2' sh -
  args:
    executable: /bin/bash

- name: Wait until there are any pods in the kube-system namespace
  shell: |
    while true; do
      if sudo kubectl get pods -n kube-system --kubeconfig /etc/rancher/k3s/k3s.yaml | grep -q 'ContainerCreating'; then
        break
      fi
      if sudo kubectl get pods -n kube-system --kubeconfig /etc/rancher/k3s/k3s.yaml | grep -q 'Pending'; then
        break
      fi
      sleep 2
    done

- name: Install or upgrade Cilium via Helm
  shell: |
    sudo helm repo add cilium https://helm.cilium.io/ --kubeconfig /etc/rancher/k3s/k3s.yaml
    helm repo update --kubeconfig /etc/rancher/k3s/k3s.yaml
    sudo helm install --version 1.17.5 \
        -n kube-system cilium cilium/cilium \
        --set=ipam.operator.clusterPoolIPv4PodCIDRList={{ pod_cidr }} \
        --set=ipam.mode=kubernetes \
        --set=operator.replicas=1 \
        --kubeconfig /etc/rancher/k3s/k3s.yaml
  args:
    executable: /bin/bash

- name: Wait for Cilium to be ready
  shell: |
    sudo kubectl -n kube-system rollout status daemonset/cilium --timeout=300s --kubeconfig /etc/rancher/k3s/k3s.yaml
  args:
    executable: /bin/bash

- name: Wait for K3s to be ready
  shell: |
    sudo kubectl wait --for=condition=Ready node --all --timeout=60s --kubeconfig /etc/rancher/k3s/k3s.yaml

- name: Ensure .kube directory exists in user's home
  file:
    path: "{{ ansible_env.HOME }}/.kube"
    state: directory
    mode: "0755"

- name: Copy kubeconfig to the user's home directory
  copy:
    src: /etc/rancher/k3s/k3s.yaml
    dest: "{{ ansible_env.HOME }}/.kube/config"
    remote_src: yes
    mode: "0644"
  become: true
  become_user: root

- name: Replace 127.0.0.1 in kubeconfig with the instance's private IP
  replace:
    path: "{{ ansible_env.HOME }}/.kube/config"
    regexp: "127.0.0.1"
    replace: "{{ instance_private_ip }}"

- name: Fetch kubeconfig to local machine
  fetch:
    src: "{{ ansible_env.HOME }}/.kube/config"
    dest: "./kubeconfig_{{ instance_name }}.yaml"
    flat: yes
